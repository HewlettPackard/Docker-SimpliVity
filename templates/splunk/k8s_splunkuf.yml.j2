#
# adapted from https://github.com/splunk/docker-itmonitoring
#
---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: ta-k8s-meta-etc
#  annotations:
#    volume.beta.kubernetes.io/storage-class: "nfs"
#spec:
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 500Mi


---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: ta-k8s-meta
  name: ta-k8s-meta
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ta-k8s-meta
    spec:
      serviceAccountName: splunk
      containers:
      - name: ta-k8s-meta
        image: chris7444/universalforwarder:7.1.2-monitor-k8s-meta
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 500Mi
        env:
         - name: UCPK8S_URL
{% if ucp_lb_fqdn | length > 0 %}
           value: '{{ ucp_lb_fqdn }}:6443'
{% else %}
           value: '{{ ucp_instance }}.{{ domain_name }}:6443'
{% endif %}
{% for forward_server in splunk_architecture_forward_servers %}
{% if loop.first %}
         - name: SPLUNK_FORWARD_SERVER
           value: {{ forward_server }}
#         - name: SPLUNK_FORWARD_SERVER_ARGS
#           value: -method clone
{% else %}
         - name: SPLUNK_FORWARD_SERVER_{{ loop.index - 1 }}
           value: {{ forward_server }}
#         - name: SPLUNK_FORWARD_SERVER_{{ loop.index -1 }}_ARGS
#           value: -method clone
{% endif %}
{% endfor %}
         - name: SPLUNK_START_ARGS
           value: --accept-license --answer-yes --seed-passwd changeme
         - name: SPLUNK_USER
           value: root
        #volumeMounts:
        #- name: splunk-etc
        #  mountPath: /opt/splunk/etc
        #- name: splunk-var
        #  mountPath: /opt/splunk/var
      terminationGracePeriodSeconds: 30
      volumes:
      #- name: splunk-etc
      #  persistentVolumeClaim:
      #    claimName: ta-k8s-meta-etc
      #- name: splunk-var
      #  hostPath:
      #    path: /var/lib/splunk-var

---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: ta-k8s-logs
  labels:
    app: ta-k8s-logs
    name: ta-k8s-logs 
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: ta-k8s-logs
      labels:
        daemon: ta-k8s-logs
    spec:
      serviceAccountName: splunk
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: ta-k8s-logs
        image: chris7444/universalforwarder:7.1.2-monitor-k8s-logs
        imagePullPolicy: Always
        env:
{% for forward_server in splunk_architecture_forward_servers %}
{% if loop.first %}
         - name: SPLUNK_FORWARD_SERVER
           value: {{ forward_server }}
#         - name: SPLUNK_FORWARD_SERVER_ARGS
#           value: -method clone
{% else %}
         - name: SPLUNK_FORWARD_SERVER_{{ loop.index - 1 }}
           value: {{ forward_server }}
#         - name: SPLUNK_FORWARD_SERVER_{{ loop.index -1 }}_ARGS
#           value: -method clone
{% endif %}
{% endfor %}
         - name: SPLUNK_START_ARGS
           value: --accept-license --answer-yes --seed-passwd changeme
         - name: SPLUNK_USER
           value: root
        #resources:
         # limits:
         #   cpu: 1
         #   memory: 200Mi
         # requests:
         #   cpu: 100m
         #   memory: 200Mi
        volumeMounts:
        #- name: ufconfig
        #  mountPath: /opt/splunk/etc/apps/search/local
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: dockersock
          mountPath: /var/run/docker.sock
          readOnly: true
       # - name: splunk-uf-etc
       #   mountPath: /opt/splunk/etc
       # - name: splunk-uf-var
       #   mountPath: /opt/splunk/var
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      #- name: ufconfig
      #  configMap:
      #    name: splunk-uf-config
      #- name: splunk-uf-etc
      #  hostPath:
      #    path: /var/lib/splunk-uf-etc
      #- name: splunk-uf-var
      #  hostPath: 
      #    path: /var/lib/splunk-uf-var
