###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Restore Swarm
  hosts: ucp_main
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault
    - ../group_vars/backups
    - includes/internal_vars.yml

  vars:
    UCPIP:  "{{groups.ucp_main[0]}}.{{domain_name}}"
    UCPUSER: "{{ucp_username}}"
    UCPPASSWORD: "{{ucp_password}}"
    JOINING_IP:  "{{ hostvars[groups.ucp_main[0]]['ip_addr'] | ipaddr('address')}}:2377"
  
  pre_tasks:
    - include_tasks: includes/find_ucp.yml
      vars:
        ping_servers: "{{ groups.ucp }}"
    - debug: var=ucp_instance
      when: _debug is defined

  environment:
    - "{{ env }}"

  roles:
    - role: hpe.openports
      hpe_openports_ports: "{{ internal_ucp_ports }}"

  tasks:

    - name: Check if node already belongs to the swarm
      shell: docker info | grep "Swarm{{":"}} inactive" | wc -l
      register: swarm_inactive
#
# configure passwordless ssh to our ansible box
#
    - name: Register key
      stat: path=/root/.ssh/id_rsa
      register: key
    - name: Create keypairs
      shell: ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ''
      when: key.stat.exists == False
    - name: Fetch all public ssh keys
      shell: cat ~/.ssh/id_rsa.pub
      register: ssh_keys
    - name: Deploy keys on localhost
      authorized_key: user=root key="{{ item }}"
      delegate_to: localhost
      with_items:
        - "{{ ssh_keys.stdout }}"

    - name: Creates directory
      file:
        path: /root/scripts
        state: directory
      when: inventory_hostname in groups.ucp_main

    - name: Copy restore script to target
      template:
        src: ../templates/restore_swarm.sh.j2
        dest: /root/scripts/restore_swarm.sh
        mode: 0744
      when: inventory_hostname in groups.ucp_main

    - name: restore swarm
      shell: /root/scripts/restore_swarm.sh 
      register: res
      when: inventory_hostname in groups.ucp_main and swarm_inactive.stdout == "1" and ucp_instance == ".none."

