---
- hosts: playwithdocker
  gather_facts: true
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars

  environment: "{{ env }}"

# Install missing PIP package and deps


  tasks:
    - name: Install easy_install
      yum:
        name: python-setuptools
        state: latest
      changed_when: false

    - name: Install PIP
      easy_install:
        name: pip
        state: latest

    - name: Ensure latest docker.py is installed
      pip:
        name: docker.py
        state: latest
      changed_when: false

    #
    # If any old versions of docker-compose, docker-py or docker PIP
    # packages are present, remove them.
    #
    - name: Remove Docker PIP components
      pip: 
        name: "{{ item }}"
        state: absent
      with_items:
        - docker-compose
        - docker-py
        - docker

    #
    # Install the latest docker-compose PIP package.
    #
    - name: Install latest docker-compose PIP package
      pip: 
        name: "{{ item }}"
        state: latest
      with_items:
        - docker-compose

    #
    # Install the latest docker-compose binary.
    #
    - name: Install docker-compose binary
      get_url:
        url: "{{ compose_url }}"
        dest: /usr/local/bin/docker-compose
        mode: 0755

    #
    # Load the xt_ipvs Kernel Module needed by Docker-in-Docker.
    #
    - name: Configure xt_ipvs Kernel Module
      modprobe:
        name: xt_ipvs
        state: present

    #
    # Load the overlay Kernel Module needed by Docker-in-Docker.
    #
    - name: Configure overlay Kernel Module
      modprobe:
        name: overlay
        state: present

    #
    # Download the latest Play-with-Docker pwd image.
    #
    - name: Pull Play-with-Docker pwd Image
      docker_image:
        name: franela/play-with-docker

    #
    # Download the latest Play-with-Docker l2 image.
    #
    - name: Pull Play-with-Docker l2 Image
      docker_image:
        name: franela/play-with-docker:l2

    #
    # Download the latest Docker-in-Docker image.
    #
    - name: Pull Docker-in-Docker Image
      docker_image:
        name: franela/dind

    #
    # Download the latest HAProxy image.
    #
    - name: Pull HAProxy Image
      docker_image:
        name: haproxy

    #
    # Tune sysctl Settings
    #
    - name: Tune net.ipv4.neigh.default.gc_thresh1 = 4096
      sysctl:
        name: net.ipv4.neigh.default.gc_thresh1
        value: 4096 
        state: present
        reload: yes

    - name: Tune net.ipv4.neigh.default.gc_thresh2 = 8192
      sysctl:
        name: net.ipv4.neigh.default.gc_thresh2
        value: 8192 
        state: present
        reload: yes

    - name: Tune net.ipv4.neigh.default.gc_thresh3 = 8192
      sysctl:
        name: net.ipv4.neigh.default.gc_thresh3
        value: 8192 
        state: present
        reload: yes

    - name: Tune net.ipv4.tcp_tw_recycle = 1
      sysctl:
        name: net.ipv4.tcp_tw_recycle
        value: 1
        state: present
        reload: yes

    - name: Tune net.ipv4.ip_local_port_range = 1024 65000
      sysctl:
        name: net.ipv4.ip_local_port_range
        value: 1024 65000
        state: present
        reload: yes

    - name: Tune fs.inotify.max_user_instances = 10000
      sysctl:
        name: fs.inotify.max_user_instances
        value: 10000
        state: present
        reload: yes

    - name: Tune net.netfilter.nf_conntrack_tcp_timeout_established = 600
      sysctl:
        name: net.netfilter.nf_conntrack_tcp_timeout_established
        value: 600
        state: present
        reload: yes

    - name: Tune net.netfilter.nf_conntrack_tcp_timeout_time_wait = 1
      sysctl:
        name: net.netfilter.nf_conntrack_tcp_timeout_time_wait
        value: 1
        state: present
        reload: yes

    #
    # Check if Play-with-Docker directory exists.
    #
    - name: Check if play-with-docker directory exists
      stat:
        path: "{{ pwd_path }}"
      register: pwd_dir

    #
    # Shutdown any previous instances of play-with-docker.
    #
    - name: Stop any running play-with-docker Instance
      docker_service:
        project_name: play-with-docker
        project_src: "{{ pwd_path }}"
        state: absent
      when: pwd_dir.stat.exists == true

    #
    # Remove any existing play-with-docker directory.
    #
    - name: Delete existing play-with-docker Directory
      file:
        path: "{{ pwd_path }}"
        state: absent
      when: pwd_dir.stat.exists == true

    #
    # Create Play-with-Docker directory
    #
    - name: Create Play-with-Docker directory
      file:
        path: "{{ pwd_path }}"
        state: directory
        mode: 0755

    #
    # Create HAProxy directory
    #
    - name: Create HAProxy Directory
      file:
        path: "{{ pwd_path }}/haproxy"
        state: directory
        mode: 0755

    #
    # Copy pwd haproxy.cfg File
    #
    - name: Copy haproxy.cfg File
      copy:
        src: ../files/haproxy.cfg
        dest: "{{ pwd_path }}/haproxy/haproxy.cfg"
        owner: root
        group: root
        mode: 0644

    #
    # Deploy Play-with-Docker docker-compose.yml File
    #
    - name: Deploy Play-with-Docker docker-compose.yml File
      template:
        src: ../templates/pwd-docker-compose.yml.j2
        dest: "{{ pwd_path }}/docker-compose.yml"
        owner: root
        group: root
        mode: 0644

    #
    # Start the new play-with-docker instance.
    #
    - name: Start Play-with-Docker
      docker_service: 
        project_name: play-with-docker
        project_src: "{{ pwd_path }}"
        build: no
        state: present

    #
    # Pause for 10 seconds to let play-with-docker instance start.
    #
    - name: Pause 10 seconds while play-with-docker initializes
      pause:
        seconds: 10
