###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Install DTR
  hosts: dtr_main
  serial: 1
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault
    - includes/internal_vars.yml

  vars:
    nfs_server: "{{ hostvars[groups['nfs'][0]].ip_addr | ipaddr('address') }}"
    http_proxy_switch:  "{% if  env.http_proxy is defined %} --http-proxy {{ env.http_proxy }} {% endif %}"
    https_proxy_switch:  "{% if  env.https_proxy is defined %} --https-proxy {{ env.https_proxy }} {% endif %}"
    no_proxy_switch:  "{% if  env.no_proxy is defined %} --no-proxy '{{ env.no_proxy }}' {% endif %}"

  environment:
    - UCP_USERNAME: "{{ ucp_username }}" 
    - UCP_PASSWORD: "{{ ucp_password }}" 
    - UCP_CA: "{{ ucp_ca_cert | default('') }}"
    - DTR_CA: "{{ dtr_ca_cert | default('') }}"
    - DTR_CERT: "{{ dtr_server_cert | default('') }}"
    - DTR_KEY: "{{ dtr_server_key | default('') }}"


  pre_tasks:
    - include_tasks: includes/find_ucp.yml
      vars:
        ping_servers: "{{ groups.ucp }}"
    - debug: var=ucp_instance
      when: _debug is defined

  roles:
    - role: worker
      ARG_UCP_IP:         "{{ ucp_instance }}.{{ domain_name }}"
      ARG_UCP_USER:       "{{ ucp_username }}"
      ARG_UCP_PASSWORD:   "{{ ucp_password }}"
      ARG_ADVERTIZE_IP:   "{{ ucp_instance }}.{{ domain_name }}:2377"
      worker_role_ports:  "{{ internal_dtr_ports }}"
      worker_join_delay:  180

  tasks:

#
# Is DTR running ?
#
    - include_tasks: includes/find_dtr.yml
      vars:
        ping_servers: "{{ groups.dtr }}" 
#
# if DTR is running, log something
#
    - name: "Create Main DTR: DTR Already running in this environment" 
      debug: msg="DTR is running on {{ dtr_instance }}" 
      when: dtr_instance != ".none." 

#
# Load Certificates
#
    - include_tasks: includes/load_certificates.yml

#
# Install DTR if it is not running, 
#

    - name: Install first DTR node
      command: docker run --env UCP_USERNAME --env UCP_PASSWORD {{ switch_env_ucp_ca }} {{ switch_env_dtr_certificates }} docker/dtr:{{ dtr_version }} install 
             --nfs-storage-url nfs://{{ nfs_server }}{{ images_folder }}
             --ucp-node {{ inventory_hostname }}.{{ domain_name }}
             --ucp-url https://{{ ucp_instance }}.{{ domain_name }}
             --dtr-external-url https://{{ groups.dtr[0] }}.{{ domain_name }}
             {{ switch_ucp_insecure }}
             {{ http_proxy_switch }} {{ https_proxy_switch }} {{ no_proxy_switch }}
      vars:
        switch_ucp_insecure:         "{% if ucp_ca_cert is defined %}{% else %}--ucp-insecure-tls{% endif %}" 
        switch_env_ucp_ca:           "{% if ucp_ca_cert is defined %}--env UCP_CA{% endif %}" 
        switch_env_dtr_certificates: "{% if dtr_ca_cert is defined %}--env DTR_CA --env DTR_CERT --env DTR_KEY{% endif %}" 
      when: dtr_instance == ".none." 
      register: dtrlog
