###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- name: Install prometheus/grafana stack with prometheus operator - grafana
  hosts: local
  connection: local
  gather_facts: false

  vars_files:
    - ../../group_vars/vars
    - ../../group_vars/vault

  environment: "{{ env }}"

  tasks:

    - debug: msg="Starting Playbook kube-prometheus grafana"

    - name: Creates /tmp/kube-prometheus directory
      file: path=/tmp/kube-prometheus state=directory
      register: file_details

    - name: Creates  grafana directory
      file: path=/tmp/kube-prometheus/grafana state=directory
      register: file_details


    - name: process grafana templates
      template:
        src: "{{ item }}"
        dest: /tmp/kube-prometheus/grafana/{{ item | basename | regex_replace('\.j2','') }}
      with_fileglob:
      - "../../templates/kube-prometheus/grafana/*.j2"

    - name: copy definitions file
      copy:
        src: ../../templates/kube-prometheus/grafana/grafana-dashboardDefinitions.yaml
        dest: /tmp/kube-prometheus/grafana/grafana-dashboardDefinitions.yaml




    - include_tasks: ../includes/find_ucp.yml
      vars:
        ping_servers: "{{ groups.ucp }}"
    - debug: var=ucp_instance
      when: _debug is defined


    # Assume playbooks/install_client_bundle.yml has been run before this
    # Assume that ucp_instance hasn't changed in the meantime
    # - include_tasks: includes/config_client.yml

    - name: Apply yml files to  configure and install grafana 
      shell: |
        . env.sh
        kubectl create namespace monitoring
        kubectl apply -f /tmp/kube-prometheus/grafana/
      args:
        chdir: ~/certs.{{ ucp_instance }}.{{ ucp_username }}
        executable: /usr/bin/bash
      register: ps

    - debug: var=ps.stdout_lines



    - name: Configure grafana NodePort
      shell: |
        . env.sh
        kubectl -n monitoring patch svc grafana --type='json' -p '[{"op":"replace","path":"/spec/type","value":"NodePort"}]'
        kubectl -n monitoring patch svc grafana --type='json' -p '[{"op": "add", "path":"/spec/ports/0/nodePort", "value":33030}]'
        kubectl -n monitoring get svc grafana
      args:
        chdir: ~/certs.{{ ucp_instance }}.{{ ucp_username }}
        executable: /usr/bin/bash
      register: ps

    - debug: var=ps.stdout_lines



