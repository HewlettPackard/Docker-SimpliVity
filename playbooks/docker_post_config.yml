###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- hosts: docker
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars

  vars:

  environment: "{{ env }}"

  tasks:
    - name: Create Docker service directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory

    - name: Add proxy details
      template: src=../templates/http-proxy.conf.j2 dest=/etc/systemd/system/docker.service.d/http-proxy.conf
      when: env.http_proxy is defined or env.https_proxy is defined
      notify: Restart Docker

    - meta: flush_handlers

    - name: Check if vsphere plugin is installed
      shell: docker plugin ls | grep vsphere | wc -l
      register: vsphere_installed

    - name: Install vsphere plugin
      command: docker plugin install --grant-all-permissions --alias vsphere vmware/vsphere-storage-for-docker:{{ vsphere_plugin_version }}
      when: vsphere_installed.stdout == "0"

  handlers:
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
        daemon_reload: yes

#####################################################################
#
# Play 2: Install vSPhere plugin on windows workers
#
#####################################################################
- hosts: win_worker
  gather_facts: false
  connection: local
  user: remote
  become: false

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault

#  environment: "{{ env }}"

  tasks:

  - name: Download vSphere Docker Volume Service Installer
    win_get_url:
      url: "{{ windows_vdvs_ps }}"
      proxy_url: "{{ proxy_url }}"
      dest: "{{ windows_vdvs_directory }}install-vdvs.ps1"
    vars:
      proxy_url: "{% if env.http_proxy is defined %}http://{{ env.http_proxy }}{% endif %}"

  - name: Install Windows vSphere Docker Volume Service
    win_shell: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      .\install-vdvs.ps1 {{ windows_vdvs_path }}_{{ windows_vdvs_version }}.zip
    args:
      chdir: "{{ windows_vdvs_directory }}"

  - name: Configure Windows vSphere Docker Volume Service
    win_service:
      name: vdvs
      start_mode: auto
      state: started
