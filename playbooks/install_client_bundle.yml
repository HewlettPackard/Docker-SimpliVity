---
- hosts: local
  gather_facts: false
  become_user: root
  become: true
  vars_files:
  - ../group_vars/vars
  - ../group_vars/vault

  tasks:

  - include_tasks: includes/find_ucp.yml
    vars:
      ping_servers: "{{ groups.ucp }}"
  - debug: var=ucp_instance
    when: _debug is defined


#
# Retrieve and remember a Token for using the UCP API
#
  - name: Retrieve a token for the UCP API
    uri:
      url: "https://{{ ucp_instance }}.{{ domain_name }}/auth/login"
      headers:
        Content-Type: application/json
      method: POST
      status_code: 200
      body_format: json
      validate_certs: no
      body: '{"username":"{{ ucp_username }}","password":"{{ ucp_password }}"}'
      use_proxy: no
    register: login
    until: login.status == 200
    retries: 20
    delay: 5

  - name: Remember the token
    set_fact:
      auth_token:  "{{ login.json.auth_token }}"

  - name: Get the client bundle
    get_url:
      url: 'https://{{ ucp_instance }}.{{ domain_name }}/api/clientbundle'
      headers: 'Authorization: Bearer {{ auth_token }}'
      validate_certs: no
      force: yes
      dest: /tmp/bundle.zip
    register: resp


  - name: Creates directory
    file: path=~/certs.{{ ucp_instance }}.{{ ucp_username }} state=directory
    register: file_details

  - set_fact:
      actual_path: "{{ file_details.path }}"

  - name: unarchive the client bundle
    unarchive:
      src: /tmp/bundle.zip
      dest: "{{ actual_path  }}"


  - name: Test client
    shell: |
      . env.sh
      kubectl version
    args:
      chdir: ~/certs.{{ ucp_instance }}.{{ ucp_username }}
      executable: /usr/bin/bash
    register: ps

  - debug: var=ps.stdout_lines

