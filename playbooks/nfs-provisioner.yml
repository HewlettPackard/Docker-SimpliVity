###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- name: Install NFS provisioner
  hosts: local
  connection: local
  gather_facts: false

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault

  environment: "{{ env }}"

  tasks:

    - debug: msg="Starting Playbook nfs-provisioner"

    - name: Copy nfs-provisioner namespace template
      template:
        src: ../templates/nfs-provisioner/nfs-provisioner-namespace.yml.j2
        dest: /tmp/nfs-provisioner-namespace.yml


    - name: Copy nfs-provisioner rbac  template
      template:
        src: ../templates/nfs-provisioner/nfs-provisioner-rbac.yml.j2
        dest: /tmp/nfs-provisioner-rbac.yml



    - name: Copy nfs-provisioner deployment template
      template:
        src: ../templates/nfs-provisioner/nfs-provisioner-deployment.yml.j2
        dest: /tmp/nfs-provisioner-deployment.yml

    - name: Copy nfs-provisioner storageclass  template
      template:
        src: ../templates/nfs-provisioner/nfs-provisioner-storageclass.yml.j2
        dest: /tmp/nfs-provisioner-storageclass.yml



    - include_tasks: includes/find_ucp.yml
      vars:
        ping_servers: "{{ groups.ucp }}"
    - debug: var=ucp_instance
      when: _debug is defined


    # Assume playbooks/install_client_bundle.yml has been run before this
    # Assume that ucp_instance hasn't changed in the meantime
    # - include_tasks: includes/config_client.yml

    - name: Apply yml files to install nfs provisioner
      shell: |
        . env.sh
        kubectl apply -f /tmp/nfs-provisioner-namespace.yml
        kubectl -n {{ nfs_provisioner_namespace }} apply -f /tmp/nfs-provisioner-rbac.yml
        kubectl -n {{ nfs_provisioner_namespace }} apply -f /tmp/nfs-provisioner-deployment.yml
        kubectl -n {{ nfs_provisioner_namespace }} apply -f /tmp/nfs-provisioner-storageclass.yml
      args:
        chdir: ~/certs.{{ ucp_instance }}.{{ ucp_username }}
        executable: /usr/bin/bash
      register: ps

    - debug: var=ps.stdout_lines



    - name: Copy nfs-provisioner test-claim template
      template:
        src: ../templates/nfs-provisioner/nfs-provisioner-test-claim.yml.j2
        dest: /tmp/nfs-provisioner-test-claim.yml

    - name: Copy nfs-provisioner test-pod  template
      template:
        src: ../templates/nfs-provisioner/nfs-provisioner-test-pod.yml.j2
        dest: /tmp/nfs-provisioner-test-pod.yml



    - name: Test nfs provisioner
      shell: |
        . env.sh
        kubectl -n {{ nfs_provisioner_namespace }} apply -f /tmp/nfs-provisioner-test-claim.yml
        kubectl -n {{ nfs_provisioner_namespace }} apply -f /tmp/nfs-provisioner-test-pod.yml
        sleep 5 # need sleep here to allow pod/container to start up and write file
        ssh {{ nfs_provisioner_server_ip }} ls -R {{ nfs_provisioner_server_share }}
        echo '*** delete test-pod ***'
        kubectl -n {{ nfs_provisioner_namespace }} delete -f /tmp/nfs-provisioner-test-pod.yml
        echo '*** cat bar.txt ***'
        ssh {{ nfs_provisioner_server_ip }} "cd {{ nfs_provisioner_server_share }}/{{nfs_provisioner_namespace }}*; cat bar.txt"
        echo '*** delete test-claim ***'
        kubectl -n {{ nfs_provisioner_namespace }} delete -f /tmp/nfs-provisioner-test-claim.yml
      args:
        chdir: ~/certs.{{ ucp_instance }}.{{ ucp_username }}
        executable: /usr/bin/bash
      register: ps

    - debug: var=ps.stdout_lines


