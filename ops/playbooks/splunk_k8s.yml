###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
---
- name: install Splunk Agents for Kubernetes
  hosts: local
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault
    - ./includes/internal_vars.yml

  environment:
    - "{{ env }}"

  tasks:

  - debug: msg="Entering splunk_k8s_meta.yml"

  - block:

    - include_tasks: includes/find_ucp.yml
      vars:
        ping_servers: "{{ groups.ucp }}"
    - debug: var=ucp_instance
      when: _debug is defined

    - name: source stack specific variables
      include_vars:
        file: ../templates/splunk/{{ monitoring_stack }}/vars.yml


#
# Retrieve and remember a Token for using the UCP API
#
    - name: Retrieve a token for the UCP API
      uri:
        url: "https://{{ ucp_instance }}.{{ domain_name }}/auth/login"
        headers:
          Content-Type: application/json
        method: POST
        status_code: 200
        body_format: json
        validate_certs: no
        body: '{"username":"{{ ucp_username }}","password":"{{ ucp_password }}"}'
        use_proxy: no
      register: login
      until: login.status == 200
      retries: 20
      delay: 5

    - name: Remember the token
      set_fact:
        auth_token:  "{{ login.json.auth_token }}"

    - include_tasks: includes/config_client.yml

    - name: Copy K8S service account resource file
      template:
        src: ../templates/splunk/k8s_serviceaccount.yml.j2
        dest: /tmp/k8s_serviceaccount.yml

    - name: Deploy the splunk service account
      shell: |
        . env.sh
        kubectl apply -f /tmp/k8s_serviceaccount.yml
        rm /tmp/k8s_serviceaccount.yml
      args:
        chdir: ~/certs.{{ ucp_username }}
        executable: /usr/bin/bash

    - name: Grant the splunk service account with the role "View Only"
      uri:
        url: "https://{{ ucp_instance }}.{{ domain_name }}/collectionGrants/system%3Aserviceaccount%3Adefault%3Asplunk/kubernetesnamespaces/viewonly?type=grantobject"
        headers:
          Content-Type: application/json
          Authorization: Bearer {{ auth_token }}
        method: PUT
        status_code: 201
        body_format: json
        validate_certs: no
        use_proxy: no
      register: roles

    - name: Copy K8S resource file (ta-k8s-meta and ta-k8s-logs)
      template:
        src: ../templates/splunk/k8s_splunkuf.yml.j2
        dest: /tmp/k8s_splunkuf.yml


    - name: Deploy the K8S universal forwarders
      shell: |
        . env.sh
        kubectl apply -f /tmp/k8s_splunkuf.yml
#        rm /tmp/k8s_splunkuf.yml
      args:
        chdir: ~/certs.{{ ucp_username }}
        executable: /usr/bin/bash

    when: monitoring_stack is defined

  - debug: msg="No splunk integration wanted"
    when: monitoring_stack is not defined

