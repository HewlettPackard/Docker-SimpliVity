###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Deploy Grafana and Prometheus Stack for Swarm
  hosts: vms
  gather_facts: false
  become_user: root
  become: true

  vars_files:
    - ../group_vars/vars
    - includes/internal_vars.yml

  environment: "{{ env }}"

  roles:

# open the port used by Grafana
    - role: hpe.openports
      hpe_openports_ports:
        - 3000/tcp
      when: inventory_hostname in groups.ucp_lb or inventory_hostname in groups.loadbalancer

  tasks:

    - name: Configure all VMS to send their logs to the logger VM
      template: src=../templates/rsyslog.conf.j2 dest=/etc/rsyslog.conf
      when: inventory_hostname in groups.vms and inventory_hostname not in groups.logger
      notify: Restart Rsyslog

    - name: Copy monitoring files to UCP
      copy: 
        src: ../monitoring
        dest: /root
        owner: root
        group: root
        mode: 0644
      when: inventory_hostname in groups.ucp

    - name: Copy docker compose file
      template: src=../monitoring/docker-compose.yml.j2 dest=/root/monitoring/docker-compose.yml
      when: inventory_hostname in groups.ucp

    - name: Deploy monitoring stack
      command: docker stack deploy --compose-file docker-compose.yml prom
      args:
        chdir: /root/monitoring
      when: inventory_hostname in groups.ucp_main

    - name: Wait for Prometheus to be available
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 9090
        delay: 15
      when: inventory_hostname in groups.ucp_main

    - name: Wait for Grafana to be available
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 3000
        delay: 15
      when: inventory_hostname in groups.ucp_main

    - name: Check if data source already available
      uri:
        url: "http://{{ inventory_hostname }}.{{ domain_name }}:3000/api/datasources/name/Prometheus"
        method: GET
        user: admin
        password: admin
        status_code: 200,404
        body_format: json
        force_basic_auth: yes
      when: inventory_hostname in groups.ucp_main
      register: ds

    - name: Create Grafana Data Source
      uri:
        url: "http://{{ inventory_hostname }}.{{ domain_name }}:3000/api/datasources"
        method: POST
        user: admin
        password: admin
        body: "{{ lookup('file','../monitoring/datasource.json') }}"
        status_code: 200
        body_format: json
        force_basic_auth: yes
      when: inventory_hostname in groups.ucp_main and ds.status == 404

    - name: Import Dashboard
      uri:
        url: "http://{{ inventory_hostname }}.{{ domain_name }}:3000/api/dashboards/db"
        method: POST
        user: admin
        password: admin
        body: {"dashboard": "{{ lookup('file','../monitoring/Docker-Swarm-Dashboard.json') }}","overwrite": true}
        status_code: 200
        body_format: json
        force_basic_auth: yes
      when: inventory_hostname in groups.ucp_main

    # not really needed but if someone makes a change to haproxy
    - name: Update haproxy.cfg on UCP Load Balancer
      template:
        src: ../templates/haproxy.cfg.ucp.j2
        dest: /etc/haproxy/haproxy.cfg
        owner: root
        group: root
        mode: 0644
      when: inventory_hostname in groups.ucp_lb or inventory_hostname in groups.loadbalancer
      notify: Enable and start haproxy service

  handlers:
    - name: Enable and start haproxy service
      systemd:
        name: haproxy
        enabled: yes
        state: restarted

    - name: Restart Rsyslog
      systemd:
        name: rsyslog
        enabled: yes
        state: restarted

